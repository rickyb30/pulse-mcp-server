name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test MCP Server
      run: |
        # Test server can start and list tools
        timeout 10s python advanced_mcp_server.py --test || echo "Server test completed"
    
    - name: Test imports and basic functionality
      run: |
        python -c "
        try:
            from advanced_mcp_server import *
            print('✅ All imports successful')
        except Exception as e:
            print(f'❌ Import error: {e}')
            exit(1)
        "

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: |
        pip freeze > requirements-freeze.txt
        safety check -r requirements-freeze.txt || echo "Safety check completed with warnings"
    
    - name: Run bandit security check
      run: |
        bandit -r . -f json -o bandit-report.json || echo "Bandit completed"
        if [ -f bandit-report.json ]; then
          echo "Security scan results available"
        fi 